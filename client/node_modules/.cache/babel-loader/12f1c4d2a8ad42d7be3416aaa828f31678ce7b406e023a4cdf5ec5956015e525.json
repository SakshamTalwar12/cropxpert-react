{"ast":null,"code":"class AuthHandler {\n  constructor() {\n    this.isAuthenticated = false;\n    this.email = null;\n  }\n  async loadAuthStatus() {\n    try {\n      const response = await fetch('/auth-status');\n      const data = await response.json();\n      this.isAuthenticated = data.authenticated;\n      this.email = data.email;\n      return data;\n    } catch (error) {\n      console.error('Error loading auth status:', error);\n      this.isAuthenticated = false;\n      this.email = null;\n      return {\n        authenticated: false\n      };\n    }\n  }\n  isAuthenticated() {\n    return this.isAuthenticated;\n  }\n  showLoginPrompt() {\n    // Redirect to login page\n    window.location.href = '/login';\n  }\n}\n\n// Create and export a singleton instance\nconst authHandler = new AuthHandler();\nexport default authHandler;\n\n// Make it available globally\nwindow.authHandler = authHandler;","map":{"version":3,"names":["AuthHandler","constructor","isAuthenticated","email","loadAuthStatus","response","fetch","data","json","authenticated","error","console","showLoginPrompt","window","location","href","authHandler"],"sources":["C:/Users/HP/OneDrive/Desktop/VS Code/C Programming/FullStack/CropXpert/client/src/utils/authHandler.js"],"sourcesContent":["class AuthHandler {\r\n  constructor() {\r\n    this.isAuthenticated = false;\r\n    this.email = null;\r\n  }\r\n\r\n  async loadAuthStatus() {\r\n    try {\r\n      const response = await fetch('/auth-status');\r\n      const data = await response.json();\r\n      this.isAuthenticated = data.authenticated;\r\n      this.email = data.email;\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error loading auth status:', error);\r\n      this.isAuthenticated = false;\r\n      this.email = null;\r\n      return { authenticated: false };\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  showLoginPrompt() {\r\n    // Redirect to login page\r\n    window.location.href = '/login';\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst authHandler = new AuthHandler();\r\nexport default authHandler;\r\n\r\n// Make it available globally\r\nwindow.authHandler = authHandler; "],"mappings":"AAAA,MAAMA,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,KAAK,GAAG,IAAI;EACnB;EAEA,MAAMC,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAI,CAACN,eAAe,GAAGK,IAAI,CAACE,aAAa;MACzC,IAAI,CAACN,KAAK,GAAGI,IAAI,CAACJ,KAAK;MACvB,OAAOI,IAAI;IACb,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAI,CAACR,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACC,KAAK,GAAG,IAAI;MACjB,OAAO;QAAEM,aAAa,EAAE;MAAM,CAAC;IACjC;EACF;EAEAP,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACA,eAAe;EAC7B;EAEAU,eAAeA,CAAA,EAAG;IAChB;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;AACF;;AAEA;AACA,MAAMC,WAAW,GAAG,IAAIhB,WAAW,CAAC,CAAC;AACrC,eAAegB,WAAW;;AAE1B;AACAH,MAAM,CAACG,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}